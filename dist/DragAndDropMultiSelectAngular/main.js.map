{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/add-item/add-item.component.css","webpack:///./src/app/components/add-item/add-item.component.html","webpack:///./src/app/components/add-item/add-item.component.ts","webpack:///./src/app/components/add-list/add-list.component.css","webpack:///./src/app/components/add-list/add-list.component.html","webpack:///./src/app/components/add-list/add-list.component.ts","webpack:///./src/app/components/list/list.component.css","webpack:///./src/app/components/list/list.component.html","webpack:///./src/app/components/list/list.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/services/list-service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-navbar></app-navbar>\\n<div style=\\\"text-align:center\\\">\\n  <h1 class=\\\"mb-3\\\">\\n    Welcome to drag and drop lists!\\n  </h1>\\n</div>\\n<app-list></app-list>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { DragulaModule } from 'ng2-dragula';\nimport { AppComponent } from './app.component';\nimport { ListComponent } from './components/list/list.component';\nimport {ListService} from './services/list-service';\nimport { AddItemComponent } from './components/add-item/add-item.component';\nimport {FormsModule} from \"@angular/forms\";\nimport { AddListComponent } from './components/add-list/add-list.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ListComponent,\n    AddItemComponent,\n    AddListComponent,\n    NavbarComponent\n  ],\n  imports: [\n    BrowserModule,\n    DragulaModule.forRoot(),\n    FormsModule\n  ],\n  providers: [ListService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<h4>Add Item</h4>\\n<div class=\\\"card card-body mb-3\\\">\\n  <form (ngSubmit)=\\\"onSubmit()\\\">\\n    <div class=\\\"form-group\\\">\\n      <input type=\\\"text\\\" name=\\\"name\\\" [(ngModel)]=\\\"name\\\" placeholder=\\\"Name\\\" class=\\\"form-control\\\">\\n    </div>\\n    <input type=\\\"submit\\\" value=\\\"Add Item\\\" class=\\\"btn btn-light\\\" [disabled]=\\\"!this.name\\\">\\n  </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {ListService} from \"../../services/list-service\";\nimport {Item} from \"../../models/item\";\n\n@Component({\n  selector: 'app-add-item',\n  templateUrl: './add-item.component.html',\n  styleUrls: ['./add-item.component.css']\n})\nexport class AddItemComponent implements OnInit {\n  id: string;\n  name: string;\n  constructor(private listService: ListService) { }\n\n  ngOnInit() {\n  }\n\n  onSubmit(){\n    // create the new item\n      const newItem = {\n        id: this.listService.generateId(),\n        name: this.name\n    }\n    //add item to the array living on the service\n    this.listService.addItem(newItem);\n    this.clearState();\n  }\n\n  clearState(){\n    this.id = null;\n    this.name = null;\n    this.listService.clearState();\n  }\n}\n","module.exports = \"\"","module.exports = \"<h4>Add List</h4>\\n<div class=\\\"card card-body mb-3\\\">\\n  <form (ngSubmit)=\\\"onSubmit()\\\">\\n    <div class=\\\"form-group\\\">\\n      <input type=\\\"text\\\" name=\\\"name\\\" [(ngModel)]=\\\"name\\\" placeholder=\\\"Name\\\" class=\\\"form-control\\\">\\n    </div>\\n    <input type=\\\"submit\\\" value=\\\"Add List\\\" class=\\\"btn btn-light\\\" [disabled]=\\\"!this.name\\\">\\n  </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {ListService} from \"../../services/list-service\";\nimport {List} from \"../../models/list\";\n\n@Component({\n  selector: 'app-add-list',\n  templateUrl: './add-list.component.html',\n  styleUrls: ['./add-list.component.css']\n})\nexport class AddListComponent implements OnInit {\n  id: string;\n  name: string;\n  constructor(private listService: ListService) { }\n\n  ngOnInit() {\n  }\n\n  onSubmit(){\n      const newList = {\n        id: this.listService.generateId(),\n        name: this.name\n    }\n    this.listService.addList(newList);\n    this.clearState();\n  }\n\n  clearState(){\n    this.id = null;\n    this.name = null;\n    this.listService.clearState();\n  }\n}","module.exports = \".list-group {\\r\\n    height: 500px;\\r\\n    overflow-y: scroll;\\r\\n}\\r\\n\\r\\n.list-container{\\r\\n    height: 500px;\\r\\n    overflow-y: scroll;\\r\\n}\\r\\n\\r\\n.list-container .list-group {\\r\\n    height: 100%;\\r\\n    overflow-y: hidden;\\r\\n    margin: 10px 0;\\r\\n}\\r\\n\\r\\n.colour-green-light{\\r\\n    background-color: #d6f5d6;\\r\\n}\"","module.exports = \"<div class=\\\"container mb-3\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-4\\\">\\n        <div class=\\\"card mb-3\\\">\\n            <div class=\\\"card-header\\\">\\n              Items\\n            </div>\\n            <div class=\\\"card-body\\\">\\n                <ul class=\\\"list-group\\\" dragula=\\\"DRAGULA_FACTS\\\">\\n                    <li (click)=\\\"toggleItemSelect(item)\\\" [class.colour-green-light]=\\\"selectedItemStyle[item.id]===true\\\" class=\\\"list-group-item\\\" *ngFor=\\\"let item of items\\\">\\n                      <a>{{item.name}}</a>\\n                    </li>\\n                  </ul>\\n            </div>\\n          </div>\\n    \\n      <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"generateItems()\\\">\\n          Generate Items\\n      </button>\\n      <button class=\\\"btn btn-success\\\" type=\\\"button\\\" (click)=\\\"toggleForm()\\\">\\n        Add Item\\n    </button>\\n    <button class=\\\"btn btn-danger\\\" type=\\\"button\\\" (click)=\\\"removeSelectedItems()\\\">\\n      Remove Items\\n   </button>\\n    </div>\\n    <div class=\\\"col-md-8\\\">\\n        <div class=\\\"card mb-3\\\">\\n            <div class=\\\"card-header\\\">\\n              List\\n            </div>\\n            <div class=\\\"card-body\\\">\\n                <div class=\\\"list-container\\\">\\n\\n                    <div *ngFor=\\\"let list of lists\\\" class=\\\"card mb-3\\\" (click)=\\\"toggleListSelect(list)\\\" [class.colour-green-light]=\\\"selectedListStyle[list.id]===true\\\">\\n                        <div class=\\\"card-body\\\">\\n                            <ul class=\\\"list-group mb-3\\\" dragula=\\\"DRAGULA_FACTS\\\">\\n                                {{list.name}}\\n                            </ul> \\n                        </div>\\n                      </div>\\n                       \\n                </div>\\n            </div>\\n          </div>\\n    \\n      <button class=\\\"btn btn-success\\\" type=\\\"button\\\" (click)=\\\"toggleListForm()\\\">\\n        Add List\\n    </button>\\n    <button class=\\\"btn btn-danger\\\" type=\\\"button\\\" (click)=\\\"removeSelectedLists()\\\">\\n      Remove Lists\\n   </button>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"container\\\">\\n    <app-add-item *ngIf=\\\"itemFormOpen\\\"></app-add-item>\\n    <app-add-list *ngIf=\\\"listFormOpen\\\"></app-add-list>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ListService} from \"../../services/list-service\";\nimport {Item} from \"../../models/item\";\nimport {List} from \"../../models/list\";\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit {\n  items: Item[];\n  selectedItems: Item[];\n  selectedItemStyle: any[] = [];\n  itemFormOpen: boolean = false;\n\n  lists: List[];\n  selectedLists: List[];\n  selectedListStyle: any[] = [];\n  listFormOpen: boolean = false;\n  constructor(private listService: ListService) { }\n\n  ngOnInit() {\n    //initialise the arrays that are used.\n    this.selectedItems = [];\n    this.listService.initEmptyArrayOfItems().subscribe(items => {\n      this.items = items;\n    });\n\n    this.selectedLists = [];\n    this.listService.initEmptyArrayOfLists().subscribe(lists => {\n      this.lists = lists;\n    });\n  }\n\n  // generate all the items to show to the user\n  generateItems(){\n    this.listService.generateItems().subscribe(items => {\n      this.items = items;\n    });\n  }\n\n  toggleItemSelect(item: Item){\n    let isFound = false;\n    //Check if item exists in selected list, if so, remove\n    this.selectedItems.forEach((cur, index) => {\n      if(item.id === cur.id){\n        this.selectedItemStyle[item.id] = false;\n        this.selectedItems.splice(index, 1);\n        isFound = true;\n      }\n   });\n\n   if(!isFound){\n      // If we get to here, Add item to selectedList\n      this.selectedItemStyle[item.id] = true; \n      this.selectedItems.push(item);\n   }\n  }\n\n  toggleForm(){\n    this.itemFormOpen = !this.itemFormOpen;\n  }\n\n  // remove all the items that have been selected\n  removeSelectedItems(){\n    this.selectedItems.forEach((item) => {\n      this.listService.removeItem(item);\n   });\n\n   this.selectedItems = [];\n  }\n\n  toggleListForm(){\n    this.listFormOpen = !this.listFormOpen;\n  }\n\n  // removes all lists that have been selected\n  removeSelectedLists(){\n    this.selectedLists.forEach((list) => {\n      this.listService.removeList(list);\n   });\n\n   this.selectedLists = [];\n  }\n\n  toggleListSelect(list: List){\n    let isFound = false;\n    //Check if list exists in selected list, if so, remove\n    this.selectedLists.forEach((cur, index) => {\n      if(list.id === cur.id){\n        this.selectedListStyle[list.id] = false;\n        this.selectedLists.splice(index, 1);\n        isFound = true;\n      }\n   });\n\n   if(!isFound){\n      // If we get to here, Add list to selectedList\n      this.selectedListStyle[list.id] = true; \n      this.selectedLists.push(list);\n   }\n  }\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-dark bg-dark mb-3\\\">\\n    <div class=\\\"container\\\">\\n      <a href=\\\"/\\\" class=\\\"navbar-brand\\\">Drag and Drop</a>\\n    </div>\\n</nav>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject'\nimport { Observable } from 'rxjs/Observable';\nimport { of } from 'rxjs/observable/of'\n\nimport {Item} from '../models/item';\nimport {List} from '../models/list';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ListService {\n  items: Item[];\n  lists: List[];\n  private stateSource = new BehaviorSubject<boolean>(true);\n  stateClear = this.stateSource.asObservable();\n\n  constructor() {\n    this.items = [];\n    this.lists = [];\n   }\n\n\n   // functions for items\n   initEmptyArrayOfItems(): Observable<Item[]>{\n      return of(this.items);\n   }\n\n   // generates all the items to show to the user, allowing components to observe the array: items\n  generateItems(): Observable<Item[]>{\n    this.items = [];\n    for(var i = 0; i < 1000; i++){\n      let item: Item = {\n        id: this.generateId(),\n        name: \"list item \" + (i + 1)\n      }\n      this.items.push(item);\n    }\n    return of(this.items);\n  }\n\n  // generates a random id. Used so when users create new items, there is no need to track the ids\n  generateId(): string {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n      var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n      return v.toString(16);\n    });\n  }\n\n\n  addItem(item: Item) {\n    this.items.push(item);\n  }\n\n  removeItem(item: Item) {\n    this.items.forEach((cur, index) => {\n      if(item.id === cur.id){\n        this.items.splice(index, 1);\n      }\n   });\n  }\n\n  clearState(){\n    this.stateSource.next(true);\n }\n\n // functions for lists\n  initEmptyArrayOfLists(): Observable<List[]>{\n    return of(this.lists);\n }\n\n addList(list: List){\n    this.lists.push(list);\n }\n\n removeList(list: List){\n  this.lists.forEach((cur, index) => {\n    if(list.id === cur.id){\n      this.lists.splice(index, 1);\n    }\n });\n }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}